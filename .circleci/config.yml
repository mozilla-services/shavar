---
version: 2
jobs:
  build:
    docker:
      - image: circleci/python:2.7.17-stretch
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Create version.json
          command: |
            printf '{"commit":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}\n' \
            "$CIRCLE_SHA1"             \
            "$CIRCLE_TAG"              \
            "$CIRCLE_PROJECT_USERNAME" \
            "$CIRCLE_PROJECT_REPONAME" \
            "$CIRCLE_BUILD_URL"        \
            > version.json
      - run:
          name: Build
          command: |
            docker info
            docker build -t app:build .
      - run:
          name: Test
          command: |
            docker run -d -p 8080:8080 -e SENTRY_DSN= -e SENTRY_ENV= --name shavar-test app:build START
            sleep 20
            docker exec shavar-test /bin/sh -c 'curl -d " " --retry 2 --retry-delay 2 --connect-timeout 10 -m 11 -v http://127.0.0.1:8080/list?client=foo&appver=1&pver=2.2'
      - run:
          name: Push
          command: |
            cat << EOF
            CIRCLE_PROJECT_REPONAME : ${CIRCLE_PROJECT_REPONAME}
            CIRCLE_TAG : ${CIRCLE_TAG}
            CIRCLE_BRANCH : ${CIRCLE_BRANCH}
            DOCKER_IMAGE : ${DOCKER_IMAGE}
            EOF
            export DOCKER_IMAGE="mozilla/${CIRCLE_PROJECT_REPONAME}:latest"
            if [ -n "${CIRCLE_TAG}" ]; then
              export DOCKER_IMAGE="mozilla/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_TAG}"
            fi
            if [ "${CIRCLE_BRANCH}" == "master" ] || [ -n "${CIRCLE_TAG}" ]; then
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker tag app:build "${DOCKER_IMAGE}"
              docker push "${DOCKER_IMAGE}"
            fi
      - store_artifacts:
          path: version.json
workflows:
  version: 2
  untagged-build:
    jobs:
      - build
  tagged-build:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
